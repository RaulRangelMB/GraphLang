BEXPRESSION = BTERM , { ( "||" ), BTERM } ;
BTERM = RELEXPRESSION , { ( "&&" ), RELEXPRESSION } ; 
RELEXPRESSION = EXPRESSION, { ("==" | ">" | "<"), EXPRESSION } ;
BLOCK = "{", "\n", { STATEMENT }, "}";
STATEMENT = ( Î» | ASSIGNMENT | PRINT | VARDEC | CONNECT | IF | WHILE ), "\n" ;
VARDEC = "var", IDENTIFIER, TYPE, [ "=", BEXPRESSION ] ;
TYPE = ( "int" | "bool" | "string" | "vertice" | "edge" ) ;
CONNECT = "connect", IDENTIFIER, IDENTIFIER, "with", IDENTIFIER, DIRECTION ;
DIRECTION = ( "left" | "right" | "both" ) ;
IF = "if", BEXPRESSION, BLOCK, [ "else", BLOCK ] ;
WHILE = "while", BEXPRESSION, BLOCK ;
ASSIGNMENT = IDENTIFIER, "=", BEXPRESSION ;
PATH = "path", "(", IDENTIFIER, ",", IDENTIFIER, ")" ;
PRINT = "Println", "(", ( BEXPRESSION | PATH ), ")" ;
EXPRESSION = TERM, { ("+" | "-"), TERM } ;
TERM = FACTOR, { ("*" | "/"), FACTOR } ;
FACTOR = (("+" | "-"| "!"), FACTOR) | NUMBER | STRING | BOOL | "(", BEXPRESSION, ")" | IDENTIFIER | SCAN ;
SCAN = "Scan()" ;
IDENTIFIER = LETTER, { LETTER | DIGIT | "_" } ;
NUMBER = DIGIT, { DIGIT } ;
STRING = '"', { LETTER | DIGIT | " " }, '"' ;
BOOL = ("true" | "false") ;
LETTER = ( a | ... | z | A | ... | Z ) ;
DIGIT = ( 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 0 ) ;